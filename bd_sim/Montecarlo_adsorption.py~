from funcs import *
from CREATE_PARAMS import *
import numpy as np
import matplotlib.pyplot as plt

TEMP=293.15 #in K
BOLTZMANN_CONSTANT = 1.38e-23  # [k_B] = J/K
V_o = 10*BOLTZMANN_CONSTANT*TEMP  #Attractive potential in units of J
rho = 0.01*10**23  #Particle concentration of the reservoir
params = create_params(BOXLENGTH = 170e-9,PARTNUM = 2, Vo = V_o, rho = rho, ATT = 0)

beta = params['beta']
Vo = params['surface potential']

r = init_particles(params)
x = r[:,0]
y = r[:,1]
dt = 0.05  #Time step in us
t = 20  #Total simulation time in us
N_iterations = int(t/dt)
t_vector = np.linspace(0,t, num = N_iterations)
N_particles = np.zeros(N_iterations)
N_particles[0] = params['nparticles']

for i in range(1,N_iterations):
    n_current = N_particles[i-1]
    #Attempt particle creation
    x_new = np.random.uniform(0,L)
    y_new = np.random.uniform(0,L)
     
    dx = x-x_new
    dy = y-y_new
    d = np.sqrt(dx**2+dy**2)

    p_create = create_montecarlo(d,0,0,0,0,params,attraction = False)
    draw = np.random.uniform()
    print(p_create)
    if draw<=p_create:
         x = np.concatenate((x,np.array([x_new])))
         y = np.concatenate((y,np.array([y_new])))
         n_current +=1
    
    N_particles[i] = n_current
    print('N',n_current)
    
plt.figure()
plt.plot(t_vector,N_particles)
plt.show()
